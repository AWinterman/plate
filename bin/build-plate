#!/usr/bin/env node
var sys = require('sys'),
    fn = function(callback) {
    var items = [
                    'utils',
                    'nodes',
                    'tags/block',
                    'tags/extends',
                    'tags/for',
                    'tags/if',
                    'tags/include',
                    'tags/with',
                    'tags/comment',
                    'filters/add',
                    'filters/addslashes',
                    'filters/capfirst',
                    'filters/center',
                    'filters/cut',
                    'filters/default',
                    'filters/dictsort',
                    'filters/divisibleby',
                    'filters/filesizeformat',
                    'filters/first',
                    'filters/floatformat',
                    'filters/safe',
                    'libraries',
                    'parsers',
                    'tokens',
                    'index'
        ],
        fs = require('fs'),
        path = require('path'),
        data = items.map(function(item) {
            var realFilename = path.join(process.cwd(), 'lib', item+'.js');

            return [item, function(callback) {
                fs.readFile(realFilename, function(err, data) {
                    callback(err, data.toString());
                });
            }];
        }),
        plate = require('plate'),
        template = new plate.Template(fs.readFileSync(path.join(__dirname, 'filetemplate.js')).toString())

        template.render({data:data}, function(err, data) {
            sys.puts(data);
        }); 
};

fn(function(err, data) {
    sys.puts(err || data);
});
